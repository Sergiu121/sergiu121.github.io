Funcţionalităţi suplimentare de reţelistică
===========================================

Aceste exerciții sunt menite să abordeze lucruri care nu sunt neapărat necesare
pentru utilizarea și înțelegerea conceptelor din acest capitol, dar oferă bune
practici și cunoștințe extra despre conectarea calculatorului la internet și
funcționarea serviciilor în internet.

1) Folosirea proxy-urilor HTTP
------------------------------

Proxy-ul HTTP este o alternativă a VPN care în loc să tuneleze tot traficul
în Internet, o va face doar pentru traficul HTTP. Putem să folosim un serviciu
online de proxy-ing.

Funcționalitatea de proxy se activează direct din browser, astfel putem să
evităm filtre bazate pe locație.

TODO demo proxy

2) Evitarea elementelor de tip paywall
--------------------------------------

a. Ştergerea elementelor din pagina web
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Îi putem pune să se conecteze pe un site cu paywall şi să le arătăm cum să
scoată paywallul folosind inspect element şi să şteargă elementul din pagină ca
să vadă conţinutul. Aici putem folosi un site care oferă cărţi.

b. Instalarea add-on-urilor de tip paywall bypass
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Le arătăm că pot să îşi instaleze pluginuri ca să şteargă paywalluri de la
site-uri cum ar fi cele de research, sau ştiri.

3) Configurarea avansată pentru SSH
-----------------------------------

a. Configurarea scurtăturilor SSH
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Aplicația SSH permite configurarea scurtăturilor pentru destinații la care vrem
să ne conectăm prin SSH.

Pentru a ne conecta în mod normal la stația <TODO>, ca utilizatorul <TODO>
folosind opțiunile <TODO> ar fi nevoie să rulăm comanda:

.. code-block::
    student@tom:~$ ssh -o ServerAliveInterval=100 user@statie

Tastarea acestei comenzi pentru fiecare conexiune succesivă este ineficientă și
există alternative pentru a reduce timpul de scriere al comenzii.

Vom configura o scurtătura pentru utilitarul ssh folosit de utilizatorul
student. Fișierul de configurare se regăsește la carea `~/.ssh/config`, iar
acesta conține intrări de tipul următor:

.. code-block::
    student@tom:~$ cat ~/.ssh/config
    Host sw-fep
        HostName fep.grid.pub.ro
        User sergiu.weisz
        ServerAliveInterval 100

Folosindu-ne de intrarea de mai sus, putem să ne conectăm la stația menționată
mai sus folosind comanda următoare:

.. code-block::
    student@tom:~$ ssh sw-fep
    TODO

Realizați configurările necesare astfel încât să va puteți conecta la stația
<TODO> ca utilizatorul <TODO>, folosind opțiunea de X forwarding.

b. Configurarea accesului prin chei SSH
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

După cum am observat în secțiunea <TODO>, ca sa ne copiem singuri cheia publică
pe o stație este necesar să cunoaștem parola utilizatorului drept care vrem să
ne autentificăm.

Însă există situații în care nu cunoaștem parola utilizatorului, dar avem acces
fizic sau printr-un protocol de comunicare la stație.

În această situație putem să configurăm cheia publică folosindu-ne de fișierele
de configurare ale serverului SSH.

Atunci când verifică cheile publice ale utilizatorilor care încearcă să se
autentifice, serverul SSH verifică identitatea clientului folosind cheile
private care sunt salvate în fișierul `~/.ssh/authorized_keys`.


.. code-block::
    student@tom:~$ cat ~/.ssh/authorized_keys
    TODO

Pentru adăugarea unei alte chei SSH pentru verificarea identității clienților,
este suficient să scriem cheia SSH a utilizatorului pe o linie nouă a fișierului
`authorized_keys`.

Realizați configurările necesare astfel încât utilizatorul <TODO> să se poată
autentifica fără parola la stația <TODO>.

TODO infra

4) Gestiunea avansată a conexiunilor la rețea
---------------------------------------------

Pentru a înlesni configurarea conexiunii la internet pentru utilizatorii Linux,
a fost adoptat ca serviciu standard pentru configurarea conexiunilor la internet
serviciul `NetworkManager`. Acesta permite utilizatorilor să configureze din
mediul grafic parametrii de rulare ai rețelei, cum ar fi serverul DNS folosit.

`NetworkManager` oferă și funcționalități în linie de comandă, cu scopul de a
face mai ușoară depanarea problemelor de rețea. Utilitarul pe care îl vom
folosi se numește `nmcli`, iar acesta ne oferă funcționalități pentru
gestionarea configurărilor.

Din punctul de vedere al serviciului `NetworkManager`, există interfețe pe care
acesta le configurează și există conexiuni, care rețin configurările.

a. Configurarea conexiunilor folosind `nmcli`
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Pentru interfețe conectat prin cablu exista doar o singură conexiune în mod
normal.

Pentru a vizualiza parametrii de rulare ai unei conexiuni rulăm comanda:

.. code-block::
    student@tom:~$ nmcli connection show Wired\ connection
    TODO

Observăm că sunt afișate lucruri cum ar fi ruta implicită, adresa IP configurată
pe interfață, serverul de DNS folosit, și modul prin care a fost configurată
interfața (prin DHCP sau în mod static).

Pentru modificarea unui atribut al conexiunii folosim comanda `nmcli` în felul
următor:

.. code-block::
    student@tom:~$ nmcli connection modify Wired\ connection ipv4.dns 1.1.1.1
    TODO

Atributul `ipv4.dns` reține date despre DNS-ul care va folosit în cadrul
conexiunii.

Faceți modificările necesare folosind comanda `nmcli` astfel încât conexiunea
"Wired Connection" sa folosească adresa IP sursă <TODO>

b. Conectarea la reţelele wireless
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

TODO, nu sunt sigur că pot face o infrastructură pentru asta
