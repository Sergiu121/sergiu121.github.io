Sistemul de fișiere
===================

Afișarea căii curente
---------------------

Atunci când folosim un terminal este foarte important să știm unde în sistemul de fișiere ne aflăm.
Dacă vrem să jucăm un joc, știm că vrem să ajungem în directorul **Games** unde avem jocul preferat, **Warcraft3**.
Pentru a ajunge în directorul **Games** trebuie să știm unde suntem și apoi să navigăm în sistemul de fișiere până acolo.

Folosirea utilitarului ``pwd`` (print working directory)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Pentru a afla calea la care ne aflăm folosim comanda ``pwd``:

.. code-block:: bash

    student@uso:~$ pwd
    /home/student
    student@uso:~$ cd /usr/bin
    student@uso:/usr/bin$ pwd
    /usr/bin

.. note::
    Rezultatul comenzii ``pwd`` se schimbă atunci când schimbăm calea la care ne aflăm.
    În exemplul anterior am schimbat calea la care ne aflăm cu ``cd`` și demonstrat schimbarea căii curente cu ``pwd``.

.. note::
    Mai multe informații și exemple se regăsesc în capitolul ##### TODO Capitol Edi ######

Schimbarea căii curente
-----------------------

Atunci când vrem să deschidem un fișier sau un joc avem nevoie să ajungem la acestea.
Deplasarea în cadrul sistemului de fișiere se face cu ``cd`` (change directory).

Folosirea utilitarului ``cd`` (change directory)
""""""""""""""""""""""""""""""""""""""""""""""""

Schimbăm calea curentă folosind utilitarul ``cd`` împreună cu calea la care vrem să ajungem:

.. code-block:: bash

    student@uso:~$ cd /usr/bin
    student@uso:/usr/bin$ pwd
    /usr/bin

.. note::
    Pentru a verifica corectitudinea operației ``cd`` nu este nevoie să executăm și ``pwd``.
    Pentru observa în promptul (partea de la începutul rândului) terminalului *student@uso:/usr/bin$*.

.. important::
    Promptul terminalului ne arată la fiecare pas în ce cale ne aflăm.


Căutarea fișierelor în sistemul de fișiere(1)
---------------------------------------------

De multe ori avem nevoie să căutăm dacă un fișier există pe sistem și unde.
Pentru a căuta un fișier într-o ierarhie de directoare, putem folosi utilitarul **find**.

Folosirea utilitarului ``find``
"""""""""""""""""""""""""""""""

Căutăm în sistem un fișier folosind utilitarului ``find``, aftfel:

.. code-block:: bash

    student@uso:~$ find . -iname "*.tar"
    ./usr_bin.tar
    ./inregistrari.tar

Am căutat în calea curentă (`/home/student`) orice fișier se termină cu **tar**.

Pentru a învăța mai multe despre acest utilitar, putem inspecta manualul ``man find``.

.. note::
    Mai multe informații și exemple se regăsesc în capitolul ##### TODO Capitol Edi ######


Căutarea fișierelor în sistemul de fișiere(2)
---------------------------------------------

Utilitarul ``find`` nu scalează pentru situațiile când avem multe fișiere și dorim un răspuns rapid.
Utilitarul ``locate`` rezolvă această problemă.
Acesta funcționează în 2 pași:

* Crearea și actualizarea unei baze de date folosind comanda **updatedb**;
* Căutarea folosind **locate**.


Performanța utilitarului este foarte bună, superioară lui **find**.
Partea negativă este că la fiecare căutare trebuie folosit utilitarul **updatedb**.

Folosirea utilitarului ``locate``
"""""""""""""""""""""""""""""""""

Încercăm să căutăm fișierul **pwd** în sistemul de fișiere folosind ``locate``:

.. code-block:: bash

    student@uso:~$ sudo updatedb
    student@uso:~$ locate pwd
    /bin/pwd
    /etc/.pwd.lock
    /lib/modules/3.16.0-4-586/kernel/drivers/watchdog/hpwdt.ko
    /sbin/unix_chkpwd
    /usr/bin/pwdx
    /usr/include/pwd.h
    /usr/share/bash-completion/completions/pwd
    /usr/share/bash-completion/completions/pwdx
    /usr/share/man/man1/pwd.1.gz
    /usr/share/man/man1/pwd.1posix.gz
    /usr/share/man/man1/pwdx.1.gz
    /usr/share/man/man3/lckpwdf.3.gz
    /usr/share/man/man3/ulckpwdf.3.gz
    /usr/share/man/man7/pwd.h.7posix.gz
    /usr/share/man/man8/unix_chkpwd.8.gz
    /usr/share/nmap/nselib/unpwdb.lua
    /usr/share/nmap/nselib/data/psexec/pwdump.lua
    /usr/share/perl5/pwd.pl

Actualizăm baza de date folosind ``updatedb`` și apoi căutăm fișiere ce conțin *pwd* cu utilitarul ``locate``.
Răspunsul comenzii este instant.

.. code-block:: bash

    student@uso:~$ locate *.tar
    /home/student/inregistrari.tar
    /home/student/usr_bin.tar

Am folosit utilitarul ``locate`` să căutăm în tot sistemul orice fișier se termină cu **.tar**.

.. note::
    Mai multe informații și exemple se regăsesc în capitolul ##### TODO Capitol Edi ######


Variabila de mediu PATH
-----------------------

Până acum am învățat câteva comenzi utile.
Dar unde se află fizic aceste comenzi pe sistem?
De unde știe sistemul care dintre fișiere **pwd** trebuie executat la comanda ``pwd``?

Acesta folosește variabila **PATH** pentru asta.

După cum am menționat într-un capitol anterior, PATH este o variabilă de mediu ce se află în contextul executării în linia de comandă.
De fiecare dată când apelăm un program, prima oară se verifică dacă acesta se află în căile din **PATH**.

Afișarea variabilei PATH din sistem
"""""""""""""""""""""""""""""""""""

Afișăm valoarea **PATH** a sistemului folosind utilitarul ``echo``.

.. code-block::

    $ echo $PATH
    /usr/local/bin:/usr/bin:/bin:/usr/games

Observăm că variabila **PATH** are patru căi din sistem, despărțite de caracterul **:**.
Astfel, sistemul verifică dacă utilitarul este prezent în calea `/usr/local/bin`; dacă nu-l găsește, merge la următoarea calea `/usr/bin`; dacă nu-l găsește, merge la următoarea cale `/bin`; dacă nu-l găsește, merge la ultima cale `/usr/games`.

.. note::
    Un utilitar poate fi la mai multe căi din PATH, dar va fi executat utilitarul din cea mai din stânga cale (prima, dacă nu a2a, etc.).

Căutarea utilitarelor în sistemul de fișiere
--------------------------------------------

Există cazuri când vrem să găsim locația exactă a unui utilitar.
De exemplu, putem să-l înlocuim cu utiltiarul nostru: dacă înlocuim utilitarul `ls` cu `pwd`, la fiecare execuție de `ls`, va fi afișată calea curentă.

Folosirea utilitarului ``which``
""""""""""""""""""""""""""""""""

Acest utilitar identifică calea programelor din sistem.

.. code-block::

    student@uso:~$ which ls
    /bin/ls
    student@uso:~$ which pwd
    /bin/pwd
    student@uso:~$ which man
    /usr/bin/man 


.. note::
    Acesta folosește variabila de mediu **PATH** pentru a găsi utilitarul cerut și va afișa rezultatele în ordinea directoarelor din **PATH**.

.. note::
    Pentru mai multe detalii verificați ##### TODO Capitol Edi ###### sau manualul ``man which``.
